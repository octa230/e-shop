{"ast":null,"code":"var _jsxFileName = \"/home/octa/Desktop/fullwebsite/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        products: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ProductScreen = () => {\n  _s();\n\n  const params = useParams();\n  const {\n    slug\n  } = params;\n  const [{\n    loading,\n    error,\n    product\n  }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: err.message\n        });\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 15\n  }, this) : error;\n};\n\n_s(ProductScreen, \"hHLne8lFqJPrIKh2SxjnTGhF0VM=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/octa/Desktop/fullwebsite/frontend/src/screens/ProductScreen.js"],"names":["React","useParams","useEffect","useReducer","axios","reducer","state","action","type","loading","products","payload","error","ProductScreen","params","slug","product","dispatch","fetchData","result","get","data","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWG,QAAAA,OAAO,EAAE;AAApB,OAAP;;AACA,SAAK,eAAL;AACA,aAAO,EAAC,GAAGH,KAAJ;AAAWI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAA5B;AAAqCF,QAAAA,OAAO,EAAC;AAA7C,OAAP;;AACA,SAAK,YAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWG,QAAAA,OAAO,EAAE,KAApB;AAA2BG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAAzC,OAAP;;AACA;AACE,aAAOL,KAAP;AARR;AAUD,CAXD;;AAcA,MAAMO,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWD,MAAjB;AAEA,QAAM,CAAC;AAACL,IAAAA,OAAD;AAAUG,IAAAA,KAAV;AAAiBI,IAAAA;AAAjB,GAAD,EAA4BC,QAA5B,IAAwCd,UAAU,CAACE,OAAD,EAAU;AAChEK,IAAAA,QAAQ,EAAE,EADsD;AAEhED,IAAAA,OAAO,EAAE,IAFuD;AAGhEG,IAAAA,KAAK,EAAE;AAHyD,GAAV,CAAxD;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAW;AAC3BD,MAAAA,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;;AAEA,UAAI;AACF,cAAMW,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,sBAAqBL,IAAK,EAArC,CAArB;AACAE,QAAAA,QAAQ,CAAC;AAACT,UAAAA,IAAI,EAAE,eAAP;AAAwBG,UAAAA,OAAO,EAAEQ,MAAM,CAACE;AAAxC,SAAD,CAAR;AACD,OAHD,CAGE,OAAOC,GAAP,EAAY;AAEZL,QAAAA,QAAQ,CAAC;AAACT,UAAAA,IAAI,EAAE,YAAP;AAAqBG,UAAAA,OAAO,EAAEW,GAAG,CAACC;AAAlC,SAAD,CAAR;AACD;AAEF,KAXD;;AAYAL,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACH,IAAD,CAdM,CAAT;AAkBF,SACEN,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GACNG,KAFH;AAID,CAjCD;;GAAMC,a;UACaZ,S;;;KADbY,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\n\n\nconst reducer =(state, action) => {\n  switch(action.type) {\n    case 'FETCH_REQUEST':\n      return {...state, loading: true};\n      case 'FETCH_SUCCESS': \n      return {...state, products: action.payload, loading:false};\n      case 'FETCH_FAIL':\n        return {...state, loading: false, error: action.payload};\n        default:\n          return state;\n  }\n};\n\n\nconst ProductScreen = () => {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{loading, error, product}, dispatch] = useReducer(reducer, {\n      products: [],\n      loading: true, \n      error: '',\n    });\n    \n    \n    useEffect(() => {\n      const fetchData = async () =>{\n        dispatch({type: 'FETCH_REQUEST'});\n  \n        try {\n          const result = await axios.get(`/api/products/slug/${slug}`);\n          dispatch({type: 'FETCH_SUCCESS', payload: result.data})\n        } catch (err) {\n  \n          dispatch({type: 'FETCH_FAIL', payload: err.message});\n        }\n  \n      };\n      fetchData();\n    }, [slug]);\n\n\n\n  return (\n    loading ? <div>Loading</div>\n    :error\n  )\n}\n\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}