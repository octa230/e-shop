{"ast":null,"code":"import _slicedToArray from\"/home/octa/e-shop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useState}from'react';import Button from'react-bootstrap/esm/Button';import{Helmet}from'react-helmet-async';import CheckoutSteps from'../components/CheckoutSteps';import Form from'react-bootstrap/Form';import{Store}from'../Store';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PaymentMethodScreen(){var navigate=useNavigate();var _useContext=useContext(Store),state=_useContext.state,ctxDispatch=_useContext.dispatch;var _state$cart=state.cart,shippingAddress=_state$cart.shippingAddress,paymentMethod=_state$cart.paymentMethod;var _useState=useState(paymentMethod||'PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethodName=_useState2[0],setPaymentMethod=_useState2[1];useEffect(function(){if(!shippingAddress.address){navigate('/shipping');}},[shippingAddress,navigate]);var submitHandler=function submitHandler(e){e.preventDefault();ctxDispatch({type:'SAVE_PAYMENT_METHOD',payload:paymentMethodName});localStorage.setItem('paymentMethod',paymentMethodName);navigate('/placeorder');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"Container small-container\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"paypal\",label:\"PayPal\",value:\"payPal\",checked:paymentMethodName==='PayPal',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"Stripe\",label:\"Stripe\",value:\"Stripe\",checked:paymentMethodName==='Stripe',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"Cash on Delivery\",label:\"Cash on Delivery\",value:\"Cash on Delivery\",checked:paymentMethodName==='Cash on Delivery',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Continue\"})})]})]})]});}","map":{"version":3,"sources":["/home/octa/e-shop/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useContext","useEffect","useState","Button","Helmet","CheckoutSteps","Form","Store","useNavigate","PaymentMethodScreen","navigate","state","ctxDispatch","dispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/esm/Button'\nimport { Helmet } from 'react-helmet-async'\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport Form from 'react-bootstrap/Form' \nimport { Store } from '../Store';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function PaymentMethodScreen() {\n\n    const navigate = useNavigate();\n\n    const {state, dispatch: ctxDispatch } = useContext(Store);\n\n    const {\n        cart: {shippingAddress, paymentMethod },\n    } = state;\n\n    const [paymentMethodName, setPaymentMethod] = useState(\n        paymentMethod || 'PayPal'\n    );\n\n    useEffect(() =>{\n        if(!shippingAddress.address) {\n            navigate('/shipping')\n        }\n    }, [shippingAddress, navigate])\n\n    const submitHandler = (e) =>{\n        e.preventDefault();\n        ctxDispatch({type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n        localStorage.setItem('paymentMethod', paymentMethodName);\n        navigate('/placeorder');\n    }\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\n      <div className='Container small-container'>\n          <Helmet>\n              <title>Payment Method</title>\n          </Helmet>\n          <h1 className='my-3'>Payment Method</h1>\n          <Form onSubmit={submitHandler}>\n              <div className='mb-3'>\n                  <Form.Check \n                  type='radio'\n                  id ='paypal'\n                  label='PayPal'\n                  value = 'payPal'\n                  checked = {paymentMethodName === 'PayPal'}\n                  onChange = {(e) => setPaymentMethod(e.target.value)}\n                  />\n              </div>\n              <div className='mb-3'>\n                  <Form.Check \n                  type='radio'\n                  id ='Stripe'\n                  label='Stripe'\n                  value = 'Stripe'\n                  checked = {paymentMethodName === 'Stripe'}\n                  onChange = {(e) => setPaymentMethod(e.target.value)}\n                  />\n              </div>\n              <div className='mb-3'>\n                  <Form.Check \n                  type='radio'\n                  id ='Cash on Delivery'\n                  label='Cash on Delivery'\n                  value = 'Cash on Delivery'\n                  checked = {paymentMethodName === 'Cash on Delivery'}\n                  onChange = {(e) => setPaymentMethod(e.target.value)}\n                  />\n              </div>\n              <div className='mb-3'>\n                  <Button type='submit'>Continue</Button>\n              </div>\n\n          </Form>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}